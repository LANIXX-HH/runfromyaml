---
env:
  - TEST=bla
  - BLA=TEST
  - HOME=/tmp/tooling
cmd:
  - type: "shell"
    expandenv: false 
    name: "print envs"
    desc: "print env variables"
    values:
      - env | grep TEST;
      - echo $BLA;
      - echo $TEST
  - type: "conf"
    confdata: | 
      test
        test
          test
      test
    confdest: /tmp/eins.conf
    confperm: 0644
  - type: "exec"
    expandenv: true
    name: "list"
    desc: "liste auf"
    values:
      - ls 
      - -lisa 
  - type: "conf"
    confdata: | 
      test
      test
      test
    confdest: /tmp/zwei.conf
    confperm: 0644
  - type: "exec"
    expandenv: true
    name: "conf"
    desc: "erstelle zwei.conf und gebe es aus"
    values:
      - cat
      - /tmp/zwei.conf
  - type: "exec"
    expandenv: true
    name: "git"
    desc: "zeige das aktuelle status von git"
    values:
      - git
      - status;
      - git branch
  - type: shell
    expandenv: true
    desc: "print shell environment"
    name: "print-shell-env"
    values:
      - ls -lisa;
      - ls 
      - -la
  - type: shell
    expandenv: true
    desc: "print shell environment"
    name: "print-shell-env"
    values:
      - echo 
      - $HOME;
      - echo "OK"
  - type: docker
    expandenv: true
    desc: "run command from docker container"
    name: "docker-run"
    command: run
    container: alpine
    values: 
        - ls
        - -lisa ".";
        - cd /
  - type: "docker-compose"
    expandenv: true
    name: "build"
    desc: "build tooling"
    dcoptions:
      - -f $HOME/.tmp/tooling/docker-compose.yaml
      - --project-directory $HOME/.tmp/tooling
    cmdoptions: []
    command: build
    service: ""
    values: []
  - type: "docker-compose"
    expandenv: true
    name: "run"
    desc: "run tooling"
    dcoptions:
      - -f $HOME/.tmp/tooling/docker-compose.yaml
      - --project-directory $HOME/.tmp/tooling
    command: run
    service: tooling
    cmdoptions: []
    values:
      - ls
      - -lisa;
      - ls -lisa
  - type: shell
    expandenv: true
    desc: "create ssh key for localhost"
    name: "create-ssh-key"
    values:
      - ls $HOME/.ssh/id_rsa-localhost || ssh-keygen -t rsa -b 4096 -N '' -f $HOME/.ssh/id_rsa-localhost
  - type: shell
    expandenv: true
    desc: "use ssh key for localhost"
    name: "use-ssh-key"
    values:
      - grep -f $HOME/.ssh/id_rsa-localhost.pub $HOME/.ssh/authorized_keys || cat $HOME/.ssh/id_rsa-localhost.pub >> $HOME/.ssh/authorized_keys
  - type: "ssh"
    expandenv: true
    name: "ssh-run"
    desc: "run ls command via ssh connection"
    user: $USER
    host: localhost
    port: 22
    options:
      - -i $HOME/.ssh/id_rsa-localhost
    values:
      - ls 
      - -lisa;
      - ls -lisa
